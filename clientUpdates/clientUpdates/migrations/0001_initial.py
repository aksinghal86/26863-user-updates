# Generated by Django 4.1 on 2024-10-08 22:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EurofinsReportsFilenames',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('excel_name', models.TextField(blank=True, null=True)),
                ('eurofins_id', models.TextField(blank=True, null=True)),
                ('pdf_name', models.TextField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('cat', models.TextField(blank=True, null=True)),
                ('results_cat', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'eurofins_reports_filenames',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowRate',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('sample_id', models.TextField(blank=True, null=True)),
                ('year', models.FloatField(blank=True, null=True)),
                ('flow_rate', models.FloatField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('flow_rate_reduced', models.BooleanField(blank=True, null=True)),
                ('source_variable', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('flow_rate_gpm', models.FloatField(blank=True, null=True)),
                ('flag', models.BooleanField(blank=True, null=True)),
                ('ehe_comments', models.TextField(blank=True, null=True)),
                ('system_gswc', models.TextField(blank=True, null=True)),
                ('gswc_loc', models.TextField(blank=True, null=True)),
                ('source_name', models.TextField(blank=True, null=True)),
                ('sample_id_from', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('dms_initials', models.TextField(blank=True, null=True)),
                ('rm_row', models.FloatField(blank=True, null=True)),
                ('qc_flag', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flow_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PfasReportsFilenames',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('firm', models.TextField(blank=True, null=True)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('client_group', models.TextField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('pws_name', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('cat', models.TextField(blank=True, null=True)),
                ('results_cat', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pfas_reports_filenames',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PfasResult',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('sample_id', models.TextField(blank=True, null=True)),
                ('sampling_date', models.DateField(blank=True, null=True)),
                ('analyte', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('detected', models.BooleanField(blank=True, null=True)),
                ('result_ppt', models.FloatField(blank=True, null=True)),
                ('flag', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('qc_flag', models.TextField(blank=True, null=True)),
                ('analysis_method', models.TextField(blank=True, null=True)),
                ('lab_sample_id', models.TextField(blank=True, null=True)),
                ('lab', models.TextField(blank=True, null=True)),
                ('cas_number', models.TextField(blank=True, null=True)),
                ('mdl', models.FloatField(blank=True, null=True)),
                ('rl', models.FloatField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('analysis_date', models.DateField(blank=True, null=True)),
                ('comments', models.BooleanField(blank=True, null=True)),
                ('dms_initials', models.TextField(blank=True, null=True)),
                ('all_nds', models.BooleanField(blank=True, null=True)),
                ('source_name', models.TextField(blank=True, null=True)),
                ('sample_id_from', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pfas_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductionDataFilenames',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('firm', models.TextField(blank=True, null=True)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('client_group', models.TextField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('pws_name', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('cat', models.TextField(blank=True, null=True)),
                ('results_cat', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'production_data_filenames',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pws',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('pwsid', models.CharField(max_length=9, unique=True)),
                ('gfe_3m', models.FloatField(blank=True, db_column='gfe_3M', null=True)),
                ('gfe_dupont', models.FloatField(blank=True, db_column='gfe_Dupont', null=True)),
                ('gfe_total', models.FloatField(blank=True, null=True)),
                ('gfe_basf', models.FloatField(blank=True, db_column='gfe_BASF', null=True)),
                ('gfe_tyco', models.FloatField(blank=True, null=True)),
                ('gfe_total_basf_tyco', models.FloatField(blank=True, null=True)),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('pws_name', models.TextField(blank=True, null=True)),
                ('test_ucmr5', models.BooleanField(blank=True, null=True)),
                ('test_state', models.BooleanField(blank=True, null=True)),
                ('conn15', models.BooleanField(blank=True, null=True)),
                ('residents25', models.BooleanField(blank=True, null=True)),
                ('x3m_3300', models.BooleanField(blank=True, null=True)),
                ('dupont_3300', models.BooleanField(blank=True, null=True)),
                ('usa', models.BooleanField(blank=True, null=True)),
                ('ownedbygov', models.BooleanField(blank=True, null=True)),
                ('pws_sdwis_code', models.TextField(blank=True, null=True)),
                ('sdwis_p_type', models.TextField(blank=True, null=True)),
                ('sdwis_sf_sue', models.TextField(blank=True, null=True)),
                ('sdwis_activity_code', models.TextField(blank=True, null=True)),
                ('pws_source_count_gw_count', models.TextField(blank=True, null=True)),
                ('pws_source_count_sw_count', models.TextField(blank=True, null=True)),
                ('pws_source_count_other_count', models.TextField(blank=True, null=True)),
                ('pws_3m_june', models.BooleanField(blank=True, null=True)),
                ('pws_dupont_june', models.BooleanField(blank=True, null=True)),
                ('eurofins_permissions', models.BooleanField(blank=True, null=True)),
                ('estimate_made', models.BooleanField(blank=True, null=True)),
                ('estimate_documents_estimate_doc1', models.TextField(blank=True, null=True)),
                ('pws_comment', models.TextField(blank=True, null=True)),
                ('ehe_password', models.TextField(blank=True, null=True)),
                ('special_needs', models.TextField(blank=True, null=True)),
                ('form_type', models.TextField(blank=True, null=True)),
                ('workbook_completeness', models.TextField(blank=True, null=True)),
                ('phase', models.TextField(blank=True, null=True)),
                ('phase_tb', models.TextField(blank=True, null=True)),
                ('sl_client_number', models.FloatField(blank=True, null=True)),
                ('client_group', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('retention_date', models.DateTimeField(blank=True, null=True)),
                ('litigation_filing_date', models.DateTimeField(blank=True, null=True)),
                ('signature_group', models.TextField(blank=True, null=True)),
                ('firm', models.TextField(blank=True, null=True)),
                ('firm_contact_name', models.TextField(blank=True, null=True)),
                ('firm_email', models.TextField(blank=True, null=True)),
                ('workbook_sent_date', models.DateTimeField(blank=True, null=True)),
                ('firm_email_to_client_date', models.DateTimeField(blank=True, null=True)),
                ('ehe_letter_sent_date', models.TextField(blank=True, null=True)),
                ('form_userid', models.TextField(blank=True, null=True)),
                ('form_pw', models.TextField(blank=True, null=True)),
                ('gs_version_control', models.TextField(blank=True, null=True)),
                ('data_entry_status', models.TextField(blank=True, null=True)),
                ('gfe_requests', models.TextField(blank=True, null=True)),
                ('gfe_estimate_basis', models.TextField(blank=True, null=True)),
                ('gfe_already_provided_by_firm', models.TextField(blank=True, null=True)),
                ('form_entry_started', models.TextField(blank=True, null=True)),
                ('gfe_ready', models.BooleanField(blank=True, null=True)),
                ('final_opt_decision', models.TextField(blank=True, null=True)),
                ('doc_letter', models.TextField(blank=True, null=True)),
                ('letter_group', models.TextField(blank=True, null=True)),
                ('total_in_group', models.IntegerField(blank=True, null=True)),
                ('firm_clean', models.TextField(blank=True, null=True)),
                ('pws_ein', models.TextField(blank=True, null=True)),
                ('pfas_qc', models.BooleanField(blank=True, null=True)),
                ('production_qc', models.BooleanField(blank=True, null=True)),
                ('baseline_qc', models.BooleanField(blank=True, null=True)),
                ('date_reviewed', models.DateField(blank=True, null=True)),
                ('pfas_files_associated', models.FloatField(blank=True, null=True)),
                ('n_x', models.IntegerField(blank=True, db_column='n.x', null=True)),
                ('pct_pfas_associated', models.FloatField(blank=True, null=True)),
                ('n_pfas_files_rcvd', models.IntegerField(blank=True, null=True)),
                ('prod_files_associated', models.FloatField(blank=True, null=True)),
                ('n_y', models.IntegerField(blank=True, db_column='n.y', null=True)),
                ('pct_prod_associated', models.FloatField(blank=True, null=True)),
                ('n_prod_files_rcvd', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pws',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PwsAddress',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('pwsid', models.CharField(max_length=9)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('address_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pws_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PwsContact',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('pwsid', models.CharField(max_length=9)),
                ('contact_name', models.TextField(blank=True, null=True)),
                ('contact_title', models.TextField(blank=True, null=True)),
                ('contact_phone', models.TextField(blank=True, null=True)),
                ('contact_cell', models.TextField(blank=True, null=True)),
                ('contact_email', models.TextField(blank=True, null=True)),
                ('contact_generalemail', models.TextField(blank=True, null=True)),
                ('contact_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pws_contact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('row_names', models.BigAutoField(db_column='row.names', primary_key=True, serialize=False)),
                ('submit_date', models.DateTimeField(blank=True, null=True)),
                ('pwsid', models.CharField(max_length=9)),
                ('form_id', models.TextField(blank=True, null=True)),
                ('sample_id', models.TextField(blank=True, null=True)),
                ('source_type_other', models.TextField(blank=True, null=True)),
                ('pws_owns_source', models.BooleanField(blank=True, null=True)),
                ('pws_operates_source', models.BooleanField(blank=True, null=True)),
                ('pws_purchased', models.BooleanField(blank=True, null=True)),
                ('pws_drinking_water', models.BooleanField(blank=True, null=True)),
                ('flow_provided', models.BooleanField(blank=True, null=True)),
                ('no_flow_why', models.TextField(blank=True, null=True)),
                ('provide_flow_future', models.BooleanField(blank=True, null=True)),
                ('flow_2022_flow_rate_reduced_pfas', models.BooleanField(blank=True, null=True)),
                ('pfas_results_available', models.BooleanField(blank=True, null=True)),
                ('no_pfas_why', models.TextField(blank=True, null=True)),
                ('provide_pfas_future', models.BooleanField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('include_form', models.BooleanField(blank=True, null=True)),
                ('form_type', models.TextField(blank=True, null=True)),
                ('source_name', models.TextField(blank=True, null=True)),
                ('sample_id_from', models.TextField(blank=True, null=True)),
                ('source_type', models.TextField(blank=True, null=True)),
                ('source_status', models.TextField(blank=True, null=True)),
                ('testing_recommendation', models.TextField(blank=True, null=True)),
                ('testing_status', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('include_sampling_loc', models.BooleanField(blank=True, null=True)),
                ('file_source', models.BooleanField(blank=True, null=True)),
                ('gswc_comments', models.TextField(blank=True, null=True)),
                ('system_gswc', models.TextField(blank=True, null=True)),
                ('gswc_loc', models.TextField(blank=True, null=True)),
                ('afr', models.FloatField(blank=True, null=True)),
                ('ehe_afr_note', models.TextField(blank=True, null=True)),
                ('filename', models.TextField(blank=True, null=True)),
                ('pfas_score', models.FloatField(blank=True, null=True)),
                ('pfas_score_method', models.TextField(blank=True, null=True)),
                ('reg_bump', models.BooleanField(blank=True, null=True)),
                ('all_nds', models.BooleanField(blank=True, null=True)),
                ('hi_candidate', models.BooleanField(blank=True, null=True)),
                ('ma6_candidate', models.BooleanField(blank=True, null=True)),
                ('gfe_3m', models.FloatField(blank=True, db_column='gfe_3M', null=True)),
                ('gfe_dupont', models.FloatField(blank=True, db_column='gfe_Dupont', null=True)),
                ('gfe_total', models.FloatField(blank=True, null=True)),
                ('gfe_basf', models.FloatField(blank=True, db_column='gfe_BASF', null=True)),
                ('gfe_tyco', models.FloatField(blank=True, null=True)),
                ('gfe_total_basf_tyco', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'source',
                'managed': False,
            },
        ),
    ]
